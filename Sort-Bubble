//Best O(n) Worst O(n^2)
function bubble(arr){
    let arrLen = arr.length;
    let noswap = true;
    for(var i = arrLen; i > 0; i--){ // i kept decreasing
        console.log(arr);
        for(var j = 0; j < i - 1; j++){ // j loop through the remains of i
            if(arr[j] > arr[j+1]){
                var temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
                noswap = false;
            }
        }
    }
    return arr;
}

arrUnsortInt = [9,8,7,6,13,15,17,11,11,12,15,5,4,3,2,1];
arrUnsortString = ["z","s","b","a","c","h","o","p","n","c","a","q","f","j","l","k"];
arrUnsortFloat = [9.2,8.3,7.5,6,13.12,15.3,17.1,11.36,11.57,12.47,15.89,5.11,4.3,3.2,2,1];

function sortfunc(num1,num2){
    return num1 - num2;
}


console.log("/* INT SORTING*/")
console.log(`Array sorted with bubbleSort      : ${bubble(arrUnsortInt)}`);
console.log(`Array sorted without sort function: ${arrUnsortInt.sort()}`);
console.log(`Array sorted with sort function   : ${arrUnsortInt.sort(sortfunc)}`);

console.log("/* FLOAT SORTING*/")
console.log(`Array sorted with bubbleSort      : ${bubble(arrUnsortFloat)}`);
console.log(`Array sorted without sort function: ${arrUnsortFloat.sort()}`);
console.log(`Array sorted with sort function   : ${arrUnsortFloat.sort(sortfunc)}`);

console.log("/* STRING SORTING*/")
console.log(`Array sorted with bubbleSort      : ${bubble(arrUnsortString)}`);
console.log(`Array sorted without sort function: ${arrUnsortString.sort()}`);
console.log(`Array sorted with sort function   : ${arrUnsortString.sort(sortfunc)}`);