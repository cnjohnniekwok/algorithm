//
function pivot(arr, start, end){
    let piovt = arr[start] 
    let swapIndex = start;
    for(var i = start + 1; i <= end; i++){
        if(piovt > arr[i]){
           // keep track of element that is greater then piovt
           swapIndex++
           //if element is less then the pivot, swap the element with swapIndex.
           [arr[i],arr[swapIndex]] = [arr[swapIndex],arr[i]]
        }
    }
    
    [arr[start],arr[swapIndex]] = [arr[swapIndex],arr[start]] //swap pivot with swapIndex, pivot will became the middle
    return swapIndex;
}

function quick(arr, start = 0, end = arr.length-1){

    if(start < end){
        let pivotIndex = pivot(arr, start, end); 
        //[ [START] [1] [p-1] [P] [p+1] [5] [END] ]
        quick(arr, start, pivotIndex-1);   
        quick(arr, pivotIndex+1,end);       
    }
    return arr;
}

arrUnsortInt = [20,9,8,7,6,13,15,17,11,19,11,12,15,5,4,3,2,1];
arrUnsortString = ["z","s","b","a","c","h","o","p","n","c","a","q","f","j","l","k"];
arrUnsortFloat = [9.2,8.3,7.5,6,13.12,15.3,17.1,11.36,11.57,12.47,15.89,5.11,4.3,3.2,2,1];

function sortfunc(num1,num2){
    return num1 - num2;
}


console.log("/* INT SORTING*/")
console.log(`Array sorted with quick sort      : ${quick(arrUnsortInt)}`);
console.log(`Array sorted without sort function: ${arrUnsortInt.sort()}`);
console.log(`Array sorted with sort function   : ${arrUnsortInt.sort(sortfunc)}`);

console.log("/* FLOAT SORTING*/")
console.log(`Array sorted with quick sort      : ${quick(arrUnsortFloat)}`);
console.log(`Array sorted without sort function: ${arrUnsortFloat.sort()}`);
console.log(`Array sorted with sort function   : ${arrUnsortFloat.sort(sortfunc)}`);

console.log("/* STRING SORTING*/")
console.log(`Array sorted with quick sort      : ${quick(arrUnsortString)}`);
console.log(`Array sorted without sort function: ${arrUnsortString.sort()}`);
console.log(`Array sorted with sort function   : ${arrUnsortString.sort(sortfunc)}`);